# NOTE: customize `example-project-image` name below before deploying to a new
# project.

# NOTE: if you modify this file, be sure to build and push the new image tag to
# the corresponding GitLab project's container registry:
#
#   $ docker login gitlab.sandel.com:5050
#   $ docker build -t gitlab.sandel.com:5050/<group>/<project> .
#   $ docker push gitlab.sandel.com:5050/<group>/<project>
#
image: "gitlab.sandel.com:5050/toolchain/cmake-project-template"

stages:
  - build
  - test
  - quality_metrics

variables:
  CMAKE_FLAGS_BUILD: '-GNinja'
  CMAKE_FLAGS_STATIC_ANALYSIS: >
    -GNinja -DCMAKE_C_CLANG_TIDY=clang-tidy;-warnings-as-errors=*
    -DCMAKE_CXX_CLANG_TIDY=clang-tidy;-warnings-as-errors=*
    -DCMAKE_C_CPPLINT=cpplint;--quiet
    -DCMAKE_CXX_CPPLINT=cpplint;--quiet
  FAIL_BUILD_ON_VIOLATION: "True"  # fail job on static analysis violation
  CMAKE_FLAGS_COVERAGE: "-GNinja -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug"

build:
  stage: build
  tags:
    - docker  # gitlab runner instance: docker executor with 'docker' tag
  script:
    - mkdir -p build && cd build
    - cmake $CMAKE_FLAGS_BUILD ..
    - cmake --build .
  after_script:
    # by default, docker-written artifacts are owned by root
    - sudo chown -R gitlab-runner:gitlab-runner build
    - sudo chown -R gitlab-runner:gitlab-runner cmake
  artifacts:
    paths:
      - build
  # it's most likely a good idea to cache outputs to reduce the build time
  cache:
    paths:
      - build

# run tests using the binary built before
test:
  stage: test
  needs: ["build"]
  tags:
    - docker
  script:
    - cd build
    - ctest
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner build
    - sudo chown -R gitlab-runner:gitlab-runner cmake

static_analysis:
  stage: quality_metrics
  needs: []
  tags:
    - docker
  script:
    - mkdir -p build_static_analysis && cd build_static_analysis
    - cmake $CMAKE_FLAGS_STATIC_ANALYSIS ..
    - cmake --build .
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner build_static_analysis
    - sudo chown -R gitlab-runner:gitlab-runner cmake
  artifacts:
    paths:
      - build_static_analysis

coverage:
  stage: quality_metrics
  needs: []
  tags:
    - docker
  script:
    - mkdir -p build_coverage && cd build_coverage
    - cmake $CMAKE_FLAGS_COVERAGE ..
    - cmake --build . --target ctest_coverage
  after_script:
    - sudo chown -R gitlab-runner:gitlab-runner build_coverage
    - sudo chown -R gitlab-runner:gitlab-runner cmake
  artifacts:
    paths:
      - build_coverage
